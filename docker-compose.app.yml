services:
  # FastAPI App
  web:
    build: .
    container_name: wardroberry-web
    expose:
      - "8000"
    environment:
      - REDIS_HOST=redis-server
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_JWT_SECRET=${SUPABASE_JWT_SECRET}
      - VIRTUAL_HOST=${MAIN_DOMAIN}
      - VIRTUAL_PORT=8000
      - LETSENCRYPT_HOST=${MAIN_DOMAIN}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
      # WebSocket support for nginx-proxy
      - VIRTUAL_PROTO=http
      - VIRTUAL_ROOT=/
    volumes:
      - .:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    restart: unless-stopped
    depends_on:
      - redis-check
    networks:
      - proxy-network
      - app-network

  # Celery Worker with gevent
  worker:
    build: .
    container_name: wardroberry-worker
    environment:
      - REDIS_HOST=redis-server
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DB=0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_JWT_SECRET=${SUPABASE_JWT_SECRET}
    volumes:
      - .:/app
    command: python -m src.worker
    restart: unless-stopped
    depends_on:
      - redis-check
    networks:
      - app-network


  # Redis Health Check (wartet bis Redis bereit ist)
  redis-check:
    image: redis:7-alpine
    container_name: redis-check
    command: >
      sh -c "
        until redis-cli -h redis-server -p 6379 -a $$REDIS_PASSWORD ping; do
          echo 'Waiting for Redis...'
          sleep 2
        done
        echo 'Redis is ready!'
      "
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - app-network
    depends_on:
      - external-redis

  # Externe Redis-Referenz (l√§uft in Infrastructure)
  external-redis:
    image: tianon/true
    external_links:
      - redis-server:redis-server

networks:
  proxy-network:
    name: proxy-network
    external: true
  app-network:
    name: app-network
    external: true
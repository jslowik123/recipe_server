services:
  # FastAPI App
  web:
    build: .
    expose:
      - "8000"
    depends_on:
      - redis
    environment:
      - REDIS_URL=${REDIS_URL_WITH_PASSWORD}
    volumes:
      - .:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - app-network

  # Redis für Task Queue
  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}  # Entferne --bind 127.0.0.1, aktiviere nur Passwort
    volumes:
      - redis_data:/data
    networks:
      - app-network

  # Celery Worker für asynchrone Tasks
  worker:
    build: .
    depends_on:
      - redis
    environment:
      - REDIS_URL=${REDIS_URL_WITH_PASSWORD}
    volumes:
      - .:/app
    command: celery -A tasks worker --loglevel=info --pool=gevent --concurrency=20
    networks:
      - app-network

  # Optional: Celery Flower für Monitoring
  flower:
    build: .
    ports:
      - "5555:5555"
    depends_on:
      - redis
    environment:
      - REDIS_URL=${REDIS_URL_WITH_PASSWORD}
    volumes:
      - .:/app
    command: celery -A tasks flower
    networks:
      - app-network

  # Nginx als Reverse Proxy
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - web
    restart: always
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis_data:
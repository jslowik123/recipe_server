services:
  # Nginx Proxy mit SSL und WebSocket Support
  nginx:
    image: nginxproxy/nginx-proxy:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx-certs:/etc/nginx/certs
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
      - ./nginx-websocket.conf:/etc/nginx/vhost.d/${MAIN_DOMAIN}_location:ro
    environment:
      - ENABLE_IPV6=true
      - DEFAULT_HOST=${MAIN_DOMAIN}
    labels:
      - "com.github.nginx-proxy.nginx"
    restart: unless-stopped
    networks:
      - proxy-network

  # Let's Encrypt Companion für automatische SSL
  letsencrypt:
    image: nginxproxy/acme-companion:latest
    container_name: nginx-letsencrypt
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - nginx-certs:/etc/nginx/certs
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
      - nginx-acme:/etc/acme.sh
    environment:
      - DEFAULT_EMAIL=${LETSENCRYPT_EMAIL}
      - NGINX_PROXY_CONTAINER=nginx-proxy
    depends_on:
      - nginx
    restart: unless-stopped
    networks:
      - proxy-network

  # Redis für Task Queue
  redis:
    image: redis:7-alpine
    container_name: redis-server
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data
    ports:
      - "127.0.0.1:6379:6379"  # Nur localhost
    restart: unless-stopped
    networks:
      - app-network

networks:
  proxy-network:
    name: proxy-network
    driver: bridge
  app-network:
    name: app-network
    driver: bridge

volumes:
  nginx-certs:
  nginx-vhost:
  nginx-html:
  nginx-acme:
  redis-data: